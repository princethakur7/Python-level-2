# Define the Car class
class Car:
    def __init__(self, car_id, make, model):
        self.car_id = car_id
        self.make = make
        self.model = model
        self.rental_status = False  # False means the car is available

# Define the Customer class
class Customer:
    def __init__(self, customer_id, name):
        self.customer_id = customer_id
        self.name = name
        self.rental_history = []  # List to store rental history

# Define the Rental class
class Rental:
    def __init__(self):
        self.cars = []  # List to store all cars
        self.customers = []  # List to store all customers

    def add_car(self, car_id, make, model):
        new_car = Car(car_id, make, model)
        self.cars.append(new_car)
        print(f"Car {make} {model} added with ID {car_id}.")

    def add_customer(self, customer_id, name):
        new_customer = Customer(customer_id, name)
        self.customers.append(new_customer)
        print(f"Customer {name} added with ID {customer_id}.")

    def rent_car(self, customer_id, car_id):
        customer = self.find_customer(customer_id)
        car = self.find_car(car_id)
        
        if customer and car:
            if not car.rental_status:
                car.rental_status = True
                customer.rental_history.append(f"Rented {car.make} {car.model}")
                print(f"Car {car.make} {car.model} rented to {customer.name}.")
            else:
                print(f"Car {car.make} {car.model} is already rented.")
        else:
            print("Customer or Car not found.")

    def return_car(self, customer_id, car_id):
        customer = self.find_customer(customer_id)
        car = self.find_car(car_id)
        
        if customer and car:
            if car.rental_status:
                car.rental_status = False
                customer.rental_history.append(f"Returned {car.make} {car.model}")
                print(f"Car {car.make} {car.model} returned by {customer.name}.")
            else:
                print(f"Car {car.make} {car.model} was not rented.")
        else:
            print("Customer or Car not found.")

    def view_rental_history(self, customer_id):
        customer = self.find_customer(customer_id)
        if customer:
            print(f"Rental history for {customer.name}:")
            for record in customer.rental_history:
                print(record)
        else:
            print("Customer not found.")

    def find_car(self, car_id):
        for car in self.cars:
            if car.car_id == car_id:
                return car
        return None

    def find_customer(self, customer_id):
        for customer in self.customers:
            if customer.customer_id == customer_id:
                return customer
        return None

# Create an instance of Rental
rental_system = Rental()

# Add cars
rental_system.add_car(1, "Toyota", "Camry")
rental_system.add_car(2, "Honda", "Civic")

# Add customers
rental_system.add_customer(1, "John Doe")
rental_system.add_customer(2, "Jane Smith")

# Rent and return cars
rental_system.rent_car(1, 1)
rental_system.return_car(1, 1)
rental_system.rent_car(2, 2)
rental_system.view_rental_history(1)
rental_system.view_rental_history(2)
